syntax = "proto3";

package api;
option go_package = "./api";
service TaskManager {
  rpc RegisterSupervisor(SupervisorStats) returns (SupervisorConfig);
  rpc FetchTask(RunnerSpec) returns (NextTask);
  rpc AppendLog(LogEntry) returns (Empty);
  rpc UploadAsset(Asset) returns (AssetRef);
  rpc WaitForInput(InputRequest) returns (InputResponse);
}

message Empty{

}

message SupervisorStats {
  string os = 1;
  string architecture = 2;
}

message SupervisorConfig {
  string refresh_token = 1;
  string runner_sha256 = 2;
  string runner_download_url = 3;
}

message RunnerSpec {
  string os = 1;
  string architecture = 2;
  string runner_id = 3;
  string supervisor_id = 4;
  int64 runner_uptime = 5;
}

message NextTask {
  string task_id = 1;
  string shell_script = 2;
  map<string, string> user_parameters = 3;
  int64 ttl = 4;
  string access_token = 5;
}

message LogEntry {
  string task_id = 1;
  string stage_name = 2;
  string stage_id = 3;
  string parent_stage_id = 4;
  repeated bytes stdout = 5;
  repeated bytes stderr = 6;
  repeated string command = 7;
  string step_id = 8;
}

message Asset {
  string task_id = 1;
  string asset_path = 2;
  bytes content = 3;
  optional string content_url = 4;
}

message AssetRef {
  string reference_id = 1;
}

message InputRequest {
  map<string, InputField> fields = 1;
  string title = 2;
  string description = 3;
}

message InputField {
  string step_id = 1;
  string name = 2;
  string title = 3;
  string description = 4;
  string kind = 5;
  bool required = 6;
  repeated OptionValue options = 7;
  string options_script = 8;
  string options_url = 9;
}

message OptionValue {
  string name = 1;
  string value = 2;
  string label = 3;
}

message InputResponse {
  map<string, string> responses = 1;
  string step_id = 2;
}
